// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package flatfileinterface.proxies;

public class InterfaceDefinition
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject interfaceDefinitionMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "FlatFileInterface.InterfaceDefinition";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		InterfaceName("InterfaceName"),
		ImportDirectory("ImportDirectory"),
		MappedEntity("MappedEntity"),
		FileExtension("FileExtension"),
		SkipFirstRow("SkipFirstRow"),
		FileType("FileType"),
		Delimiter("Delimiter"),
		IsActive("IsActive"),
		IntervalType("IntervalType"),
		Interval("Interval"),
		LastRunTime("LastRunTime"),
		StartScheduleTime("StartScheduleTime"),
		NextRunTime("NextRunTime"),
		TriggerEventsOnCommit("TriggerEventsOnCommit"),
		IsNew("IsNew"),
		TextQualifierSelection("TextQualifierSelection"),
		LogLevel("LogLevel"),
		UseQueue("UseQueue"),
		QueueNumber("QueueNumber"),
		FileEncoding("FileEncoding"),
		BatchSize("BatchSize"),
		LogToConsole("LogToConsole"),
		InterfaceDefinition_ColumnDefinition("FlatFileInterface.InterfaceDefinition_ColumnDefinition"),
		InterfaceDefinition_MxObjectType("FlatFileInterface.InterfaceDefinition_MxObjectType");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public InterfaceDefinition(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "FlatFileInterface.InterfaceDefinition"));
	}

	protected InterfaceDefinition(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject interfaceDefinitionMendixObject)
	{
		if (interfaceDefinitionMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("FlatFileInterface.InterfaceDefinition", interfaceDefinitionMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a FlatFileInterface.InterfaceDefinition");

		this.interfaceDefinitionMendixObject = interfaceDefinitionMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'InterfaceDefinition.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static flatfileinterface.proxies.InterfaceDefinition initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return flatfileinterface.proxies.InterfaceDefinition.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static flatfileinterface.proxies.InterfaceDefinition initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new flatfileinterface.proxies.InterfaceDefinition(context, mendixObject);
	}

	public static flatfileinterface.proxies.InterfaceDefinition load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return flatfileinterface.proxies.InterfaceDefinition.initialize(context, mendixObject);
	}

	public static java.util.List<flatfileinterface.proxies.InterfaceDefinition> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<flatfileinterface.proxies.InterfaceDefinition> result = new java.util.ArrayList<flatfileinterface.proxies.InterfaceDefinition>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//FlatFileInterface.InterfaceDefinition" + xpathConstraint))
			result.add(flatfileinterface.proxies.InterfaceDefinition.initialize(context, obj));
		return result;
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of InterfaceName
	 */
	public final java.lang.String getInterfaceName()
	{
		return getInterfaceName(getContext());
	}

	/**
	 * @param context
	 * @return value of InterfaceName
	 */
	public final java.lang.String getInterfaceName(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.InterfaceName.toString());
	}

	/**
	 * Set value of InterfaceName
	 * @param interfacename
	 */
	public final void setInterfaceName(java.lang.String interfacename)
	{
		setInterfaceName(getContext(), interfacename);
	}

	/**
	 * Set value of InterfaceName
	 * @param context
	 * @param interfacename
	 */
	public final void setInterfaceName(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String interfacename)
	{
		getMendixObject().setValue(context, MemberNames.InterfaceName.toString(), interfacename);
	}

	/**
	 * @return value of ImportDirectory
	 */
	public final java.lang.String getImportDirectory()
	{
		return getImportDirectory(getContext());
	}

	/**
	 * @param context
	 * @return value of ImportDirectory
	 */
	public final java.lang.String getImportDirectory(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.ImportDirectory.toString());
	}

	/**
	 * Set value of ImportDirectory
	 * @param importdirectory
	 */
	public final void setImportDirectory(java.lang.String importdirectory)
	{
		setImportDirectory(getContext(), importdirectory);
	}

	/**
	 * Set value of ImportDirectory
	 * @param context
	 * @param importdirectory
	 */
	public final void setImportDirectory(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String importdirectory)
	{
		getMendixObject().setValue(context, MemberNames.ImportDirectory.toString(), importdirectory);
	}

	/**
	 * @return value of MappedEntity
	 */
	public final java.lang.String getMappedEntity()
	{
		return getMappedEntity(getContext());
	}

	/**
	 * @param context
	 * @return value of MappedEntity
	 */
	public final java.lang.String getMappedEntity(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.MappedEntity.toString());
	}

	/**
	 * Set value of MappedEntity
	 * @param mappedentity
	 */
	public final void setMappedEntity(java.lang.String mappedentity)
	{
		setMappedEntity(getContext(), mappedentity);
	}

	/**
	 * Set value of MappedEntity
	 * @param context
	 * @param mappedentity
	 */
	public final void setMappedEntity(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String mappedentity)
	{
		getMendixObject().setValue(context, MemberNames.MappedEntity.toString(), mappedentity);
	}

	/**
	 * @return value of FileExtension
	 */
	public final java.lang.String getFileExtension()
	{
		return getFileExtension(getContext());
	}

	/**
	 * @param context
	 * @return value of FileExtension
	 */
	public final java.lang.String getFileExtension(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.FileExtension.toString());
	}

	/**
	 * Set value of FileExtension
	 * @param fileextension
	 */
	public final void setFileExtension(java.lang.String fileextension)
	{
		setFileExtension(getContext(), fileextension);
	}

	/**
	 * Set value of FileExtension
	 * @param context
	 * @param fileextension
	 */
	public final void setFileExtension(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String fileextension)
	{
		getMendixObject().setValue(context, MemberNames.FileExtension.toString(), fileextension);
	}

	/**
	 * @return value of SkipFirstRow
	 */
	public final java.lang.Boolean getSkipFirstRow()
	{
		return getSkipFirstRow(getContext());
	}

	/**
	 * @param context
	 * @return value of SkipFirstRow
	 */
	public final java.lang.Boolean getSkipFirstRow(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.SkipFirstRow.toString());
	}

	/**
	 * Set value of SkipFirstRow
	 * @param skipfirstrow
	 */
	public final void setSkipFirstRow(java.lang.Boolean skipfirstrow)
	{
		setSkipFirstRow(getContext(), skipfirstrow);
	}

	/**
	 * Set value of SkipFirstRow
	 * @param context
	 * @param skipfirstrow
	 */
	public final void setSkipFirstRow(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean skipfirstrow)
	{
		getMendixObject().setValue(context, MemberNames.SkipFirstRow.toString(), skipfirstrow);
	}

	/**
	 * Set value of FileType
	 * @param filetype
	 */
	public final flatfileinterface.proxies.FileType getFileType()
	{
		return getFileType(getContext());
	}

	/**
	 * @param context
	 * @return value of FileType
	 */
	public final flatfileinterface.proxies.FileType getFileType(com.mendix.systemwideinterfaces.core.IContext context)
	{
		Object obj = getMendixObject().getValue(context, MemberNames.FileType.toString());
		if (obj == null)
			return null;

		return flatfileinterface.proxies.FileType.valueOf((java.lang.String) obj);
	}

	/**
	 * Set value of FileType
	 * @param filetype
	 */
	public final void setFileType(flatfileinterface.proxies.FileType filetype)
	{
		setFileType(getContext(), filetype);
	}

	/**
	 * Set value of FileType
	 * @param context
	 * @param filetype
	 */
	public final void setFileType(com.mendix.systemwideinterfaces.core.IContext context, flatfileinterface.proxies.FileType filetype)
	{
		if (filetype != null)
			getMendixObject().setValue(context, MemberNames.FileType.toString(), filetype.toString());
		else
			getMendixObject().setValue(context, MemberNames.FileType.toString(), null);
	}

	/**
	 * @return value of Delimiter
	 */
	public final java.lang.String getDelimiter()
	{
		return getDelimiter(getContext());
	}

	/**
	 * @param context
	 * @return value of Delimiter
	 */
	public final java.lang.String getDelimiter(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Delimiter.toString());
	}

	/**
	 * Set value of Delimiter
	 * @param delimiter
	 */
	public final void setDelimiter(java.lang.String delimiter)
	{
		setDelimiter(getContext(), delimiter);
	}

	/**
	 * Set value of Delimiter
	 * @param context
	 * @param delimiter
	 */
	public final void setDelimiter(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String delimiter)
	{
		getMendixObject().setValue(context, MemberNames.Delimiter.toString(), delimiter);
	}

	/**
	 * @return value of IsActive
	 */
	public final java.lang.Boolean getIsActive()
	{
		return getIsActive(getContext());
	}

	/**
	 * @param context
	 * @return value of IsActive
	 */
	public final java.lang.Boolean getIsActive(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.IsActive.toString());
	}

	/**
	 * Set value of IsActive
	 * @param isactive
	 */
	public final void setIsActive(java.lang.Boolean isactive)
	{
		setIsActive(getContext(), isactive);
	}

	/**
	 * Set value of IsActive
	 * @param context
	 * @param isactive
	 */
	public final void setIsActive(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean isactive)
	{
		getMendixObject().setValue(context, MemberNames.IsActive.toString(), isactive);
	}

	/**
	 * Set value of IntervalType
	 * @param intervaltype
	 */
	public final flatfileinterface.proxies.IntervalType getIntervalType()
	{
		return getIntervalType(getContext());
	}

	/**
	 * @param context
	 * @return value of IntervalType
	 */
	public final flatfileinterface.proxies.IntervalType getIntervalType(com.mendix.systemwideinterfaces.core.IContext context)
	{
		Object obj = getMendixObject().getValue(context, MemberNames.IntervalType.toString());
		if (obj == null)
			return null;

		return flatfileinterface.proxies.IntervalType.valueOf((java.lang.String) obj);
	}

	/**
	 * Set value of IntervalType
	 * @param intervaltype
	 */
	public final void setIntervalType(flatfileinterface.proxies.IntervalType intervaltype)
	{
		setIntervalType(getContext(), intervaltype);
	}

	/**
	 * Set value of IntervalType
	 * @param context
	 * @param intervaltype
	 */
	public final void setIntervalType(com.mendix.systemwideinterfaces.core.IContext context, flatfileinterface.proxies.IntervalType intervaltype)
	{
		if (intervaltype != null)
			getMendixObject().setValue(context, MemberNames.IntervalType.toString(), intervaltype.toString());
		else
			getMendixObject().setValue(context, MemberNames.IntervalType.toString(), null);
	}

	/**
	 * @return value of Interval
	 */
	public final java.lang.Integer getInterval()
	{
		return getInterval(getContext());
	}

	/**
	 * @param context
	 * @return value of Interval
	 */
	public final java.lang.Integer getInterval(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Integer) getMendixObject().getValue(context, MemberNames.Interval.toString());
	}

	/**
	 * Set value of Interval
	 * @param interval
	 */
	public final void setInterval(java.lang.Integer interval)
	{
		setInterval(getContext(), interval);
	}

	/**
	 * Set value of Interval
	 * @param context
	 * @param interval
	 */
	public final void setInterval(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Integer interval)
	{
		getMendixObject().setValue(context, MemberNames.Interval.toString(), interval);
	}

	/**
	 * @return value of LastRunTime
	 */
	public final java.util.Date getLastRunTime()
	{
		return getLastRunTime(getContext());
	}

	/**
	 * @param context
	 * @return value of LastRunTime
	 */
	public final java.util.Date getLastRunTime(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.util.Date) getMendixObject().getValue(context, MemberNames.LastRunTime.toString());
	}

	/**
	 * Set value of LastRunTime
	 * @param lastruntime
	 */
	public final void setLastRunTime(java.util.Date lastruntime)
	{
		setLastRunTime(getContext(), lastruntime);
	}

	/**
	 * Set value of LastRunTime
	 * @param context
	 * @param lastruntime
	 */
	public final void setLastRunTime(com.mendix.systemwideinterfaces.core.IContext context, java.util.Date lastruntime)
	{
		getMendixObject().setValue(context, MemberNames.LastRunTime.toString(), lastruntime);
	}

	/**
	 * @return value of StartScheduleTime
	 */
	public final java.util.Date getStartScheduleTime()
	{
		return getStartScheduleTime(getContext());
	}

	/**
	 * @param context
	 * @return value of StartScheduleTime
	 */
	public final java.util.Date getStartScheduleTime(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.util.Date) getMendixObject().getValue(context, MemberNames.StartScheduleTime.toString());
	}

	/**
	 * Set value of StartScheduleTime
	 * @param startscheduletime
	 */
	public final void setStartScheduleTime(java.util.Date startscheduletime)
	{
		setStartScheduleTime(getContext(), startscheduletime);
	}

	/**
	 * Set value of StartScheduleTime
	 * @param context
	 * @param startscheduletime
	 */
	public final void setStartScheduleTime(com.mendix.systemwideinterfaces.core.IContext context, java.util.Date startscheduletime)
	{
		getMendixObject().setValue(context, MemberNames.StartScheduleTime.toString(), startscheduletime);
	}

	/**
	 * @return value of NextRunTime
	 */
	public final java.util.Date getNextRunTime()
	{
		return getNextRunTime(getContext());
	}

	/**
	 * @param context
	 * @return value of NextRunTime
	 */
	public final java.util.Date getNextRunTime(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.util.Date) getMendixObject().getValue(context, MemberNames.NextRunTime.toString());
	}

	/**
	 * Set value of NextRunTime
	 * @param nextruntime
	 */
	public final void setNextRunTime(java.util.Date nextruntime)
	{
		setNextRunTime(getContext(), nextruntime);
	}

	/**
	 * Set value of NextRunTime
	 * @param context
	 * @param nextruntime
	 */
	public final void setNextRunTime(com.mendix.systemwideinterfaces.core.IContext context, java.util.Date nextruntime)
	{
		getMendixObject().setValue(context, MemberNames.NextRunTime.toString(), nextruntime);
	}

	/**
	 * @return value of TriggerEventsOnCommit
	 */
	public final java.lang.Boolean getTriggerEventsOnCommit()
	{
		return getTriggerEventsOnCommit(getContext());
	}

	/**
	 * @param context
	 * @return value of TriggerEventsOnCommit
	 */
	public final java.lang.Boolean getTriggerEventsOnCommit(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.TriggerEventsOnCommit.toString());
	}

	/**
	 * Set value of TriggerEventsOnCommit
	 * @param triggereventsoncommit
	 */
	public final void setTriggerEventsOnCommit(java.lang.Boolean triggereventsoncommit)
	{
		setTriggerEventsOnCommit(getContext(), triggereventsoncommit);
	}

	/**
	 * Set value of TriggerEventsOnCommit
	 * @param context
	 * @param triggereventsoncommit
	 */
	public final void setTriggerEventsOnCommit(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean triggereventsoncommit)
	{
		getMendixObject().setValue(context, MemberNames.TriggerEventsOnCommit.toString(), triggereventsoncommit);
	}

	/**
	 * @return value of IsNew
	 */
	public final java.lang.Boolean getIsNew()
	{
		return getIsNew(getContext());
	}

	/**
	 * @param context
	 * @return value of IsNew
	 */
	public final java.lang.Boolean getIsNew(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.IsNew.toString());
	}

	/**
	 * Set value of IsNew
	 * @param isnew
	 */
	public final void setIsNew(java.lang.Boolean isnew)
	{
		setIsNew(getContext(), isnew);
	}

	/**
	 * Set value of IsNew
	 * @param context
	 * @param isnew
	 */
	public final void setIsNew(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean isnew)
	{
		getMendixObject().setValue(context, MemberNames.IsNew.toString(), isnew);
	}

	/**
	 * Set value of TextQualifierSelection
	 * @param textqualifierselection
	 */
	public final flatfileinterface.proxies.TextQualifier getTextQualifierSelection()
	{
		return getTextQualifierSelection(getContext());
	}

	/**
	 * @param context
	 * @return value of TextQualifierSelection
	 */
	public final flatfileinterface.proxies.TextQualifier getTextQualifierSelection(com.mendix.systemwideinterfaces.core.IContext context)
	{
		Object obj = getMendixObject().getValue(context, MemberNames.TextQualifierSelection.toString());
		if (obj == null)
			return null;

		return flatfileinterface.proxies.TextQualifier.valueOf((java.lang.String) obj);
	}

	/**
	 * Set value of TextQualifierSelection
	 * @param textqualifierselection
	 */
	public final void setTextQualifierSelection(flatfileinterface.proxies.TextQualifier textqualifierselection)
	{
		setTextQualifierSelection(getContext(), textqualifierselection);
	}

	/**
	 * Set value of TextQualifierSelection
	 * @param context
	 * @param textqualifierselection
	 */
	public final void setTextQualifierSelection(com.mendix.systemwideinterfaces.core.IContext context, flatfileinterface.proxies.TextQualifier textqualifierselection)
	{
		if (textqualifierselection != null)
			getMendixObject().setValue(context, MemberNames.TextQualifierSelection.toString(), textqualifierselection.toString());
		else
			getMendixObject().setValue(context, MemberNames.TextQualifierSelection.toString(), null);
	}

	/**
	 * Set value of LogLevel
	 * @param loglevel
	 */
	public final flatfileinterface.proxies.LogLevel getLogLevel()
	{
		return getLogLevel(getContext());
	}

	/**
	 * @param context
	 * @return value of LogLevel
	 */
	public final flatfileinterface.proxies.LogLevel getLogLevel(com.mendix.systemwideinterfaces.core.IContext context)
	{
		Object obj = getMendixObject().getValue(context, MemberNames.LogLevel.toString());
		if (obj == null)
			return null;

		return flatfileinterface.proxies.LogLevel.valueOf((java.lang.String) obj);
	}

	/**
	 * Set value of LogLevel
	 * @param loglevel
	 */
	public final void setLogLevel(flatfileinterface.proxies.LogLevel loglevel)
	{
		setLogLevel(getContext(), loglevel);
	}

	/**
	 * Set value of LogLevel
	 * @param context
	 * @param loglevel
	 */
	public final void setLogLevel(com.mendix.systemwideinterfaces.core.IContext context, flatfileinterface.proxies.LogLevel loglevel)
	{
		if (loglevel != null)
			getMendixObject().setValue(context, MemberNames.LogLevel.toString(), loglevel.toString());
		else
			getMendixObject().setValue(context, MemberNames.LogLevel.toString(), null);
	}

	/**
	 * @return value of UseQueue
	 */
	public final java.lang.Boolean getUseQueue()
	{
		return getUseQueue(getContext());
	}

	/**
	 * @param context
	 * @return value of UseQueue
	 */
	public final java.lang.Boolean getUseQueue(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.UseQueue.toString());
	}

	/**
	 * Set value of UseQueue
	 * @param usequeue
	 */
	public final void setUseQueue(java.lang.Boolean usequeue)
	{
		setUseQueue(getContext(), usequeue);
	}

	/**
	 * Set value of UseQueue
	 * @param context
	 * @param usequeue
	 */
	public final void setUseQueue(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean usequeue)
	{
		getMendixObject().setValue(context, MemberNames.UseQueue.toString(), usequeue);
	}

	/**
	 * @return value of QueueNumber
	 */
	public final java.lang.Integer getQueueNumber()
	{
		return getQueueNumber(getContext());
	}

	/**
	 * @param context
	 * @return value of QueueNumber
	 */
	public final java.lang.Integer getQueueNumber(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Integer) getMendixObject().getValue(context, MemberNames.QueueNumber.toString());
	}

	/**
	 * Set value of QueueNumber
	 * @param queuenumber
	 */
	public final void setQueueNumber(java.lang.Integer queuenumber)
	{
		setQueueNumber(getContext(), queuenumber);
	}

	/**
	 * Set value of QueueNumber
	 * @param context
	 * @param queuenumber
	 */
	public final void setQueueNumber(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Integer queuenumber)
	{
		getMendixObject().setValue(context, MemberNames.QueueNumber.toString(), queuenumber);
	}

	/**
	 * Set value of FileEncoding
	 * @param fileencoding
	 */
	public final flatfileinterface.proxies.FileEncoding getFileEncoding()
	{
		return getFileEncoding(getContext());
	}

	/**
	 * @param context
	 * @return value of FileEncoding
	 */
	public final flatfileinterface.proxies.FileEncoding getFileEncoding(com.mendix.systemwideinterfaces.core.IContext context)
	{
		Object obj = getMendixObject().getValue(context, MemberNames.FileEncoding.toString());
		if (obj == null)
			return null;

		return flatfileinterface.proxies.FileEncoding.valueOf((java.lang.String) obj);
	}

	/**
	 * Set value of FileEncoding
	 * @param fileencoding
	 */
	public final void setFileEncoding(flatfileinterface.proxies.FileEncoding fileencoding)
	{
		setFileEncoding(getContext(), fileencoding);
	}

	/**
	 * Set value of FileEncoding
	 * @param context
	 * @param fileencoding
	 */
	public final void setFileEncoding(com.mendix.systemwideinterfaces.core.IContext context, flatfileinterface.proxies.FileEncoding fileencoding)
	{
		if (fileencoding != null)
			getMendixObject().setValue(context, MemberNames.FileEncoding.toString(), fileencoding.toString());
		else
			getMendixObject().setValue(context, MemberNames.FileEncoding.toString(), null);
	}

	/**
	 * @return value of BatchSize
	 */
	public final java.lang.Integer getBatchSize()
	{
		return getBatchSize(getContext());
	}

	/**
	 * @param context
	 * @return value of BatchSize
	 */
	public final java.lang.Integer getBatchSize(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Integer) getMendixObject().getValue(context, MemberNames.BatchSize.toString());
	}

	/**
	 * Set value of BatchSize
	 * @param batchsize
	 */
	public final void setBatchSize(java.lang.Integer batchsize)
	{
		setBatchSize(getContext(), batchsize);
	}

	/**
	 * Set value of BatchSize
	 * @param context
	 * @param batchsize
	 */
	public final void setBatchSize(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Integer batchsize)
	{
		getMendixObject().setValue(context, MemberNames.BatchSize.toString(), batchsize);
	}

	/**
	 * @return value of LogToConsole
	 */
	public final java.lang.Boolean getLogToConsole()
	{
		return getLogToConsole(getContext());
	}

	/**
	 * @param context
	 * @return value of LogToConsole
	 */
	public final java.lang.Boolean getLogToConsole(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.LogToConsole.toString());
	}

	/**
	 * Set value of LogToConsole
	 * @param logtoconsole
	 */
	public final void setLogToConsole(java.lang.Boolean logtoconsole)
	{
		setLogToConsole(getContext(), logtoconsole);
	}

	/**
	 * Set value of LogToConsole
	 * @param context
	 * @param logtoconsole
	 */
	public final void setLogToConsole(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean logtoconsole)
	{
		getMendixObject().setValue(context, MemberNames.LogToConsole.toString(), logtoconsole);
	}

	/**
	 * @return value of InterfaceDefinition_ColumnDefinition
	 */
	public final java.util.List<flatfileinterface.proxies.ColumnDefinition> getInterfaceDefinition_ColumnDefinition() throws com.mendix.core.CoreException
	{
		return getInterfaceDefinition_ColumnDefinition(getContext());
	}

	/**
	 * @param context
	 * @return value of InterfaceDefinition_ColumnDefinition
	 */
	@SuppressWarnings("unchecked")
	public final java.util.List<flatfileinterface.proxies.ColumnDefinition> getInterfaceDefinition_ColumnDefinition(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		java.util.List<flatfileinterface.proxies.ColumnDefinition> result = new java.util.ArrayList<flatfileinterface.proxies.ColumnDefinition>();
		Object valueObject = getMendixObject().getValue(context, MemberNames.InterfaceDefinition_ColumnDefinition.toString());
		if (valueObject == null)
			return result;
		for (com.mendix.systemwideinterfaces.core.IMendixObject mendixObject : com.mendix.core.Core.retrieveIdList(context, (java.util.List<com.mendix.systemwideinterfaces.core.IMendixIdentifier>) valueObject))
			result.add(flatfileinterface.proxies.ColumnDefinition.initialize(context, mendixObject));
		return result;
	}

	/**
	 * Set value of InterfaceDefinition_ColumnDefinition
	 * @param interfacedefinition_columndefinition
	 */
	public final void setInterfaceDefinition_ColumnDefinition(java.util.List<flatfileinterface.proxies.ColumnDefinition> interfacedefinition_columndefinition)
	{
		setInterfaceDefinition_ColumnDefinition(getContext(), interfacedefinition_columndefinition);
	}

	/**
	 * Set value of InterfaceDefinition_ColumnDefinition
	 * @param context
	 * @param interfacedefinition_columndefinition
	 */
	public final void setInterfaceDefinition_ColumnDefinition(com.mendix.systemwideinterfaces.core.IContext context, java.util.List<flatfileinterface.proxies.ColumnDefinition> interfacedefinition_columndefinition)
	{
		java.util.List<com.mendix.systemwideinterfaces.core.IMendixIdentifier> identifiers = new java.util.ArrayList<com.mendix.systemwideinterfaces.core.IMendixIdentifier>();
		for (flatfileinterface.proxies.ColumnDefinition proxyObject : interfacedefinition_columndefinition)
			identifiers.add(proxyObject.getMendixObject().getId());
		getMendixObject().setValue(context, MemberNames.InterfaceDefinition_ColumnDefinition.toString(), identifiers);
	}

	/**
	 * @return value of InterfaceDefinition_MxObjectType
	 */
	public final mxmodelreflection.proxies.MxObjectType getInterfaceDefinition_MxObjectType() throws com.mendix.core.CoreException
	{
		return getInterfaceDefinition_MxObjectType(getContext());
	}

	/**
	 * @param context
	 * @return value of InterfaceDefinition_MxObjectType
	 */
	public final mxmodelreflection.proxies.MxObjectType getInterfaceDefinition_MxObjectType(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		mxmodelreflection.proxies.MxObjectType result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.InterfaceDefinition_MxObjectType.toString());
		if (identifier != null)
			result = mxmodelreflection.proxies.MxObjectType.load(context, identifier);
		return result;
	}

	/**
	 * Set value of InterfaceDefinition_MxObjectType
	 * @param interfacedefinition_mxobjecttype
	 */
	public final void setInterfaceDefinition_MxObjectType(mxmodelreflection.proxies.MxObjectType interfacedefinition_mxobjecttype)
	{
		setInterfaceDefinition_MxObjectType(getContext(), interfacedefinition_mxobjecttype);
	}

	/**
	 * Set value of InterfaceDefinition_MxObjectType
	 * @param context
	 * @param interfacedefinition_mxobjecttype
	 */
	public final void setInterfaceDefinition_MxObjectType(com.mendix.systemwideinterfaces.core.IContext context, mxmodelreflection.proxies.MxObjectType interfacedefinition_mxobjecttype)
	{
		if (interfacedefinition_mxobjecttype == null)
			getMendixObject().setValue(context, MemberNames.InterfaceDefinition_MxObjectType.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.InterfaceDefinition_MxObjectType.toString(), interfacedefinition_mxobjecttype.getMendixObject().getId());
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return interfaceDefinitionMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final flatfileinterface.proxies.InterfaceDefinition that = (flatfileinterface.proxies.InterfaceDefinition) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "FlatFileInterface.InterfaceDefinition";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
