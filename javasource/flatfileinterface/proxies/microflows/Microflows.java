// This file was generated by Mendix Modeler 7.8.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package flatfileinterface.proxies.microflows;

import java.util.HashMap;
import java.util.Map;
import com.mendix.core.Core;
import com.mendix.core.CoreException;
import com.mendix.systemwideinterfaces.MendixRuntimeException;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixObject;

public class Microflows
{
	// These are the microflows for the FlatFileInterface module
	public static void aCo_LoggingToConsole(IContext context, flatfileinterface.proxies.LogMessage _logMessage)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("LogMessage", _logMessage == null ? null : _logMessage.getMendixObject());
			Core.execute(context, "FlatFileInterface.ACo_LoggingToConsole", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean bCo_ValidateColumnDefinition(IContext context, flatfileinterface.proxies.ColumnDefinition _columnDefinition)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ColumnDefinition", _columnDefinition == null ? null : _columnDefinition.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "FlatFileInterface.BCo_ValidateColumnDefinition", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean bCo_ValidateConfiguration(IContext context, flatfileinterface.proxies.InterfaceDefinition _interfaceDefinition)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InterfaceDefinition", _interfaceDefinition == null ? null : _interfaceDefinition.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "FlatFileInterface.BCo_ValidateConfiguration", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void clearLogsOlderThan10Days(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "FlatFileInterface.ClearLogsOlderThan10Days", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<mxmodelreflection.proxies.MxObjectMember> dS_GetMxObjectsViaDefinition(IContext context, flatfileinterface.proxies.ColumnDefinition _columnDefinition)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ColumnDefinition", _columnDefinition == null ? null : _columnDefinition.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "FlatFileInterface.DS_GetMxObjectsViaDefinition", params);
			java.util.List<mxmodelreflection.proxies.MxObjectMember> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<mxmodelreflection.proxies.MxObjectMember>();
				for (IMendixObject obj : objs)
					result.add(mxmodelreflection.proxies.MxObjectMember.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String fileEncodingToString(IContext context, flatfileinterface.proxies.FileEncoding _fileEncoding)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("FileEncoding", _fileEncoding == null ? null : _fileEncoding.name());
			return (java.lang.String)Core.execute(context, "FlatFileInterface.FileEncodingToString", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String fileTypeToString(IContext context, flatfileinterface.proxies.FileType _fileType)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("FileType", _fileType == null ? null : _fileType.name());
			return (java.lang.String)Core.execute(context, "FlatFileInterface.FileTypeToString", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void importInterfaceDefinition_Step2(IContext context, flatfileinterface.proxies.ImportExportDocument _importExportDocument)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ImportExportDocument", _importExportDocument == null ? null : _importExportDocument.getMendixObject());
			Core.execute(context, "FlatFileInterface.ImportInterfaceDefinition_Step2", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String intervalTypeToString(IContext context, flatfileinterface.proxies.IntervalType _intervalType)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("IntervalType", _intervalType == null ? null : _intervalType.name());
			return (java.lang.String)Core.execute(context, "FlatFileInterface.IntervalTypeToString", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String logLevelToString(IContext context, flatfileinterface.proxies.LogLevel _logLevel)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("LogLevel", _logLevel == null ? null : _logLevel.name());
			return (java.lang.String)Core.execute(context, "FlatFileInterface.LogLevelToString", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void mB_AddSkippedColumns(IContext context, flatfileinterface.proxies.InterfaceDefinition _interfaceDefinition)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InterfaceDefinition", _interfaceDefinition == null ? null : _interfaceDefinition.getMendixObject());
			Core.execute(context, "FlatFileInterface.MB_AddSkippedColumns", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void mB_CreateNewColumnDefinition(IContext context, flatfileinterface.proxies.InterfaceDefinition _interfaceDefinition)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InterfaceDefinition", _interfaceDefinition == null ? null : _interfaceDefinition.getMendixObject());
			Core.execute(context, "FlatFileInterface.MB_CreateNewColumnDefinition", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void mB_CreateSkippedColumns(IContext context, flatfileinterface.proxies.SkipColumnHelper _skipColumnHelper)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("SkipColumnHelper", _skipColumnHelper == null ? null : _skipColumnHelper.getMendixObject());
			Core.execute(context, "FlatFileInterface.MB_CreateSkippedColumns", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void mB_DeleteColumnDefinition(IContext context, flatfileinterface.proxies.ColumnDefinition _columnDefinition, flatfileinterface.proxies.InterfaceDefinition _interfaceDefinition)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ColumnDefinition", _columnDefinition == null ? null : _columnDefinition.getMendixObject());
			params.put("InterfaceDefinition", _interfaceDefinition == null ? null : _interfaceDefinition.getMendixObject());
			Core.execute(context, "FlatFileInterface.MB_DeleteColumnDefinition", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void mB_DelimitedMoveDown(IContext context, flatfileinterface.proxies.ColumnDefinition _columnDefinition, flatfileinterface.proxies.InterfaceDefinition _interfaceDefinition)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ColumnDefinition", _columnDefinition == null ? null : _columnDefinition.getMendixObject());
			params.put("InterfaceDefinition", _interfaceDefinition == null ? null : _interfaceDefinition.getMendixObject());
			Core.execute(context, "FlatFileInterface.MB_DelimitedMoveDown", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void mB_DelimitedMoveUp(IContext context, flatfileinterface.proxies.ColumnDefinition _columnDefinition, flatfileinterface.proxies.InterfaceDefinition _interfaceDefinition)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ColumnDefinition", _columnDefinition == null ? null : _columnDefinition.getMendixObject());
			params.put("InterfaceDefinition", _interfaceDefinition == null ? null : _interfaceDefinition.getMendixObject());
			Core.execute(context, "FlatFileInterface.MB_DelimitedMoveUp", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void mB_ExecuteInterface_NoRenameFiles_4_1_00(IContext context, flatfileinterface.proxies.InterfaceDefinition _interfaceDefinition)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InterfaceDefinition", _interfaceDefinition == null ? null : _interfaceDefinition.getMendixObject());
			Core.execute(context, "FlatFileInterface.MB_ExecuteInterface_NoRenameFiles_4_1_00", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void mB_ExportInterfaceDefinition(IContext context, flatfileinterface.proxies.InterfaceDefinition _interfaceDefinition)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InterfaceDefinition", _interfaceDefinition == null ? null : _interfaceDefinition.getMendixObject());
			Core.execute(context, "FlatFileInterface.MB_ExportInterfaceDefinition", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void mB_ImportInterfaceDefinition(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "FlatFileInterface.MB_ImportInterfaceDefinition", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void mB_OpenEditColumnDefinition(IContext context, flatfileinterface.proxies.ColumnDefinition _columnDefinition, flatfileinterface.proxies.InterfaceDefinition _interfaceDefinition)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ColumnDefinition", _columnDefinition == null ? null : _columnDefinition.getMendixObject());
			params.put("InterfaceDefinition", _interfaceDefinition == null ? null : _interfaceDefinition.getMendixObject());
			Core.execute(context, "FlatFileInterface.MB_OpenEditColumnDefinition", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void mB_ResetQueuedFiles(IContext context, java.util.List<flatfileinterface.proxies.ProcesFileQueue> _procesFileQueueList)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			java.util.ArrayList<IMendixObject> listparam_procesFileQueueList = null;
			if (_procesFileQueueList != null)
			{
				listparam_procesFileQueueList = new java.util.ArrayList<IMendixObject>();
				for (flatfileinterface.proxies.ProcesFileQueue obj : _procesFileQueueList)
					listparam_procesFileQueueList.add(obj.getMendixObject());
			}
			params.put("ProcesFileQueueList", listparam_procesFileQueueList);
			Core.execute(context, "FlatFileInterface.MB_ResetQueuedFiles", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void mB_SaveAndCloseDefinition(IContext context, flatfileinterface.proxies.InterfaceDefinition _interfaceDefinition)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InterfaceDefinition", _interfaceDefinition == null ? null : _interfaceDefinition.getMendixObject());
			Core.execute(context, "FlatFileInterface.MB_SaveAndCloseDefinition", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void mB_SaveColumnDefinition(IContext context, flatfileinterface.proxies.ColumnDefinition _columnDefinition)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ColumnDefinition", _columnDefinition == null ? null : _columnDefinition.getMendixObject());
			Core.execute(context, "FlatFileInterface.MB_SaveColumnDefinition", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void mB_SaveDefinition(IContext context, flatfileinterface.proxies.InterfaceDefinition _interfaceDefinition)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InterfaceDefinition", _interfaceDefinition == null ? null : _interfaceDefinition.getMendixObject());
			Core.execute(context, "FlatFileInterface.MB_SaveDefinition", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void oC_EndCheckNegative(IContext context, flatfileinterface.proxies.ColumnDefinition _columnDefinition)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ColumnDefinition", _columnDefinition == null ? null : _columnDefinition.getMendixObject());
			Core.execute(context, "FlatFileInterface.OC_EndCheckNegative", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void oC_ReplaceBackslashes(IContext context, flatfileinterface.proxies.InterfaceDefinition _interfaceDefinition)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InterfaceDefinition", _interfaceDefinition == null ? null : _interfaceDefinition.getMendixObject());
			Core.execute(context, "FlatFileInterface.OC_ReplaceBackslashes", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void oC_SetColumnDefType(IContext context, flatfileinterface.proxies.InterfaceDefinition _interfaceDefinition)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InterfaceDefinition", _interfaceDefinition == null ? null : _interfaceDefinition.getMendixObject());
			Core.execute(context, "FlatFileInterface.OC_SetColumnDefType", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void oC_SetEndBasedOnLength(IContext context, flatfileinterface.proxies.ColumnDefinition _columnDefinition)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ColumnDefinition", _columnDefinition == null ? null : _columnDefinition.getMendixObject());
			Core.execute(context, "FlatFileInterface.OC_SetEndBasedOnLength", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void oC_SetMappedAttributeValue(IContext context, flatfileinterface.proxies.ColumnDefinition _columnDefinition)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ColumnDefinition", _columnDefinition == null ? null : _columnDefinition.getMendixObject());
			Core.execute(context, "FlatFileInterface.OC_SetMappedAttributeValue", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void oC_SetMappedEntityValue(IContext context, flatfileinterface.proxies.InterfaceDefinition _interfaceDefinition)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InterfaceDefinition", _interfaceDefinition == null ? null : _interfaceDefinition.getMendixObject());
			Core.execute(context, "FlatFileInterface.OC_SetMappedEntityValue", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void oC_StartCheckNegative(IContext context, flatfileinterface.proxies.ColumnDefinition _columnDefinition)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("ColumnDefinition", _columnDefinition == null ? null : _columnDefinition.getMendixObject());
			Core.execute(context, "FlatFileInterface.OC_StartCheckNegative", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void oC_ToggleActivate(IContext context, flatfileinterface.proxies.InterfaceDefinition _interfaceDefinition)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InterfaceDefinition", _interfaceDefinition == null ? null : _interfaceDefinition.getMendixObject());
			Core.execute(context, "FlatFileInterface.OC_ToggleActivate", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String primitiveTypeToString(IContext context, mxmodelreflection.proxies.PrimitiveTypes _mappingType)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("MappingType", _mappingType == null ? null : _mappingType.name());
			return (java.lang.String)Core.execute(context, "FlatFileInterface.PrimitiveTypeToString", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void sE_DeleteQueueRecords(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "FlatFileInterface.SE_DeleteQueueRecords", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void sE_HandleExecuteInterface(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "FlatFileInterface.SE_HandleExecuteInterface", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static flatfileinterface.proxies.FileEncoding stringToFileEncoding(IContext context, java.lang.String _fileEncoding)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("FileEncoding", _fileEncoding);
			java.lang.String result = (java.lang.String)Core.execute(context, "FlatFileInterface.StringToFileEncoding", params);
			if (result == null)
				return null;
			return flatfileinterface.proxies.FileEncoding.valueOf(result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static flatfileinterface.proxies.FileType stringToFileType(IContext context, java.lang.String _fileType)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("FileType", _fileType);
			java.lang.String result = (java.lang.String)Core.execute(context, "FlatFileInterface.StringToFileType", params);
			if (result == null)
				return null;
			return flatfileinterface.proxies.FileType.valueOf(result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static flatfileinterface.proxies.IntervalType stringToIntervalType(IContext context, java.lang.String _intertvalType)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("IntertvalType", _intertvalType);
			java.lang.String result = (java.lang.String)Core.execute(context, "FlatFileInterface.StringToIntervalType", params);
			if (result == null)
				return null;
			return flatfileinterface.proxies.IntervalType.valueOf(result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static flatfileinterface.proxies.LogLevel stringToLogLevel(IContext context, java.lang.String _loglevel)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Loglevel", _loglevel);
			java.lang.String result = (java.lang.String)Core.execute(context, "FlatFileInterface.StringToLogLevel", params);
			if (result == null)
				return null;
			return flatfileinterface.proxies.LogLevel.valueOf(result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static mxmodelreflection.proxies.PrimitiveTypes stringToPrimitiveType(IContext context, java.lang.String _primitiveType)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("PrimitiveType", _primitiveType);
			java.lang.String result = (java.lang.String)Core.execute(context, "FlatFileInterface.StringToPrimitiveType", params);
			if (result == null)
				return null;
			return mxmodelreflection.proxies.PrimitiveTypes.valueOf(result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static flatfileinterface.proxies.TextQualifier stringToTextQualifier(IContext context, java.lang.String _textQualifier)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("TextQualifier", _textQualifier);
			java.lang.String result = (java.lang.String)Core.execute(context, "FlatFileInterface.StringToTextQualifier", params);
			if (result == null)
				return null;
			return flatfileinterface.proxies.TextQualifier.valueOf(result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static flatfileinterface.proxies.ColumnDefinition sUB_CreateColumnDef(IContext context, flatfileinterface.proxies.InterfaceDefinition _xMLMappingParent)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("XMLMappingParent", _xMLMappingParent == null ? null : _xMLMappingParent.getMendixObject());
			IMendixObject result = (IMendixObject)Core.execute(context, "FlatFileInterface.SUB_CreateColumnDef", params);
			return result == null ? null : flatfileinterface.proxies.ColumnDefinition.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void sUB_ExecuteSelectedInterface_4_1_00(IContext context, flatfileinterface.proxies.InterfaceDefinition _interfaceDefinition, boolean _rename)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InterfaceDefinition", _interfaceDefinition == null ? null : _interfaceDefinition.getMendixObject());
			params.put("Rename", _rename);
			Core.execute(context, "FlatFileInterface.SUB_ExecuteSelectedInterface_4_1_00", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String textQualifierToString(IContext context, flatfileinterface.proxies.TextQualifier _textQualifier)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("TextQualifier", _textQualifier == null ? null : _textQualifier.name());
			return (java.lang.String)Core.execute(context, "FlatFileInterface.TextQualifierToString", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean vA_IsNew(IContext context, flatfileinterface.proxies.InterfaceDefinition _interfaceDefinition)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("InterfaceDefinition", _interfaceDefinition == null ? null : _interfaceDefinition.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "FlatFileInterface.VA_IsNew", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
}