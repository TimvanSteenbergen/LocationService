// This file was generated by Mendix Modeler.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package listutils.actions;

import listutils.ListUtils;
import com.mendix.core.Core;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.webui.CustomJavaAction;
import javax.xml.transform.*;
import javax.xml.transform.stream.StreamResult;
import javax.xml.transform.stream.StreamSource;
import java.io.StringReader;
import java.io.StringWriter;
import com.mendix.systemwideinterfaces.core.IMendixObject;

/**
 * Generic list operation to process a given list of mendix objects using XSLT 2.0, e.g.
 * 
 * - Sort a list based on (multiple) expressions, not just plain attributes
 * - Filter a heterogenous list of objects based on their type
 * - Filter a list of objects by multiple attributes using complex expressions, not just based on an equality search on a single attribute
 */
public class AggregateList extends CustomJavaAction<java.lang.String>
{
	private java.util.List<IMendixObject> myList;
	private java.lang.String transformFn;

	public AggregateList(IContext context, java.util.List<IMendixObject> myList, java.lang.String transformFn)
	{
		super(context);
		this.myList = myList;
		this.transformFn = transformFn;
	}

	@Override
	public java.lang.String executeAction() throws Exception
	{
		// BEGIN USER CODE
		
		// STEP 1: Serialize the input list to an XML string
		IContext context = this.getContext();
		String myXML = ListUtils.SerializeList(context, this.myList);
			
		// STEP 2: Apply the XSLT transformation using the Saxon parser	
		String myXSLT;
		myXSLT = "<xsl:stylesheet version=\"2.0\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:fn=\"http://www.w3.org/2005/xpath-functions\" >";
		myXSLT = myXSLT + "<xsl:output indent=\"no\" method=\"text\"/>";
		myXSLT = myXSLT + " <xsl:template match=\"root\">";
		myXSLT = myXSLT + this.transformFn;
		myXSLT = myXSLT + " </xsl:template>";
		myXSLT = myXSLT + "</xsl:stylesheet>";

		return ListUtils.TransformSerializedList(myXML,myXSLT);

		/*
		StringWriter writer = new StringWriter();
		TransformerFactory tFactory = new net.sf.saxon.TransformerFactoryImpl();

		Transformer transformer = tFactory.newTransformer(new StreamSource(new StringReader(myXSLT)));
	        transformer.transform(new StreamSource(new StringReader(myXML)),new javax.xml.transform.stream.StreamResult(writer));

	        return writer.toString();
		*/

		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 */
	@Override
	public java.lang.String toString()
	{
		return "AggregateList";
	}

	// BEGIN EXTRA CODE
	// END EXTRA CODE
}
